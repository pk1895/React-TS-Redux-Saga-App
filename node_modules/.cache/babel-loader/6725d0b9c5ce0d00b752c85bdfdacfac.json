{"ast":null,"code":"const INCREMENT = \"increment\";\nconst DECREMENT = \"decrement\";\nexport const increment = () => ({\n  type: INCREMENT\n});\nexport const decrement = () => ({\n  type: DECREMENT\n});\nconst initialState = {\n  count: 0\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT:\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case DECREMENT:\n      return { ...state,\n        count: state.count - 1\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"sources":["C:/Users/PersonalCodes/ts-react-app/src/redux/store/counterReducer.ts"],"names":["INCREMENT","DECREMENT","increment","type","decrement","initialState","count","counterReducer","state","action"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAO;AAC9BC,EAAAA,IAAI,EAAEH;AADwB,CAAP,CAAlB;AAIP,OAAO,MAAMI,SAAS,GAAG,OAAO;AAC9BD,EAAAA,IAAI,EAAEF;AADwB,CAAP,CAAlB;AAWP,MAAMI,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,MAAMC,cAAc,GAChB,YAGK;AAAA,MAFLC,KAEK,uEAFGH,YAEH;AAAA,MADLI,MACK;;AAEP,UAAQA,MAAM,CAACN,IAAf;AACE,SAAKH,SAAL;AACM,aAAO,EAAE,GAAGQ,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAjC,OAAP;;AAEN,SAAKL,SAAL;AACM,aAAO,EAAE,GAAGO,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAjC,OAAP;;AAEN;AACE,aAAOE,KAAP;AARJ;AAUD,CAhBD;;AAkBA,eAAeD,cAAf","sourcesContent":["const INCREMENT = \"increment\";\r\nconst DECREMENT = \"decrement\";\r\n\r\nexport const increment = () => ({\r\n  type: INCREMENT\r\n});\r\n\r\nexport const decrement = () => ({\r\n  type: DECREMENT\r\n});\r\n\r\nexport interface ICounter{\r\n  count:number\r\n}\r\n\r\ninterface ICounterAction{\r\n    type:string\r\n}\r\nconst initialState = {\r\n  count: 0\r\n};\r\n\r\nconst counterReducer =\r\n    (\r\n    state = initialState,\r\n    action: ICounterAction\r\n    ) => {\r\n    \r\n  switch (action.type) {      \r\n    case INCREMENT:\r\n          return { ...state, count: state.count + 1 };\r\n      \r\n    case DECREMENT:\r\n          return { ...state, count: state.count - 1 };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default counterReducer;"]},"metadata":{},"sourceType":"module"}